
@inject FavouriteService favouriteService;

<div class="movieCard card h-100">
    <img src="@Movie.PosterPath" alt="Movie Poster" class="card-img-top" />

    <div class="card-body border border-top">
        <div class="card-title fw-bold 1h-1">
            @Movie.Title
        </div>
        <div class="card-text 1h-1 fst-italic">
            @{
                var parsed = DateTime.TryParse(Movie.ReleaseDate, out var releaseDate);
            }
            Release Date: @(parsed ? releaseDate.ToString("MMMM dd, yyyy") : "Unknown")
        </div>
    </div>
    <div class="movieCardFooter card-footer d-flex justify-content-between">
        <button class="btn btn-outline-primary" @onclick="HandleToggleFavoriteAsync">
            @(IsFavourite ? "Remove Fav" : "Add Fav ")
        </button>
        <a href="moviedetail" class="btn btn-primary">More Info</a>
    </div>
</div>


@code {
    [Parameter, EditorRequired]
    public Movie? Movie { get; set; }

    [Parameter]
    public EventCallback OnChange { get; set; }

    public bool IsFavourite;

    protected override async Task OnParametersSetAsync()
    {
        if (Movie != null)
        {
            IsFavourite = await favouriteService.IsFavouriteAsync(Movie);
        }
    }

    private async Task HandleToggleFavoriteAsync()
    {
        if (Movie == null)
        {
            return;   
        }

        // Toggle the favorite status of the movie
        if (IsFavourite)
        {
            await favouriteService.RemoveFavouriteAsync(Movie);
            IsFavourite = false;
        }
        else
        {
            await favouriteService.AddFavouriteAsync(Movie);
            IsFavourite = true;
        }

        await OnChange.InvokeAsync();
    }
}
